---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
type Props = CollectionEntry<'blog'>['data'];
const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---
<html lang="jp">
	<head>
		<BaseHead title={title} description={description ?? ''} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
				max-width: 800px; /* 最大幅を制限 */
				margin: 0 auto 2rem auto; /* 中央揃えと下マージン */
				padding: 0 1rem; /* 左右にパディング */
			}
			.hero-image img {
				display: block;
				width: 100%;
				height: auto; /* アスペクト比を維持 */
				max-height: 400px; /* 最大高さを制限 */
				object-fit: cover; /* 画像を適切にトリミング */
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
			
			/* レスポンシブ対応 */
			@media (max-width: 768px) {
				.hero-image {
					max-width: 100%;
					padding: 0 0.5rem;
					margin-bottom: 1.5rem;
				}
				.hero-image img {
					max-height: 250px; /* モバイルではより小さく */
				}
				.prose {
					width: 100%;
					padding: 0.5em;
				}
			}
			
			@media (max-width: 480px) {
				.hero-image img {
					max-height: 200px; /* さらに小さなスクリーンではより小さく */
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<article>
				<div class="hero-image">
					{heroImage && <img width={800} height={400} src={heroImage} alt={`${title} hero image`} />}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1>{title}</h1>
						<hr />
					</div>
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>